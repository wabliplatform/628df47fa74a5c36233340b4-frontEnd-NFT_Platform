/**
 * TempApi
 * This is a sample openApi document
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: lampralexandros@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Nft from './Nft';
import NftNFTimage from './NftNFTimage';

/**
 * The User model module.
 * @module model/User
 * @version 1.0.0
 */
class User {
    /**
     * Constructs a new <code>User</code>.
     * @alias module:model/User
     * @param username {String} 
     * @param userProfile {module:model/NftNFTimage} 
     * @param bioUser {String} 
     * @param userNFTs {Array.<module:model/Nft>} 
     */
    constructor(username, userProfile, bioUser, userNFTs) { 
        
        User.initialize(this, username, userProfile, bioUser, userNFTs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, username, userProfile, bioUser, userNFTs) { 
        obj['Username'] = username;
        obj['userProfile'] = userProfile;
        obj['BioUser'] = bioUser;
        obj['UserNFTs'] = userNFTs;
    }

    /**
     * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/User} obj Optional instance to populate.
     * @return {module:model/User} The populated <code>User</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new User();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('Username')) {
                obj['Username'] = ApiClient.convertToType(data['Username'], 'String');
            }
            if (data.hasOwnProperty('userProfile')) {
                obj['userProfile'] = NftNFTimage.constructFromObject(data['userProfile']);
            }
            if (data.hasOwnProperty('BioUser')) {
                obj['BioUser'] = ApiClient.convertToType(data['BioUser'], 'String');
            }
            if (data.hasOwnProperty('UserNFTs')) {
                obj['UserNFTs'] = ApiClient.convertToType(data['UserNFTs'], [Nft]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} _id
 */
User.prototype['_id'] = undefined;

/**
 * @member {String} Username
 */
User.prototype['Username'] = undefined;

/**
 * @member {module:model/NftNFTimage} userProfile
 */
User.prototype['userProfile'] = undefined;

/**
 * @member {String} BioUser
 */
User.prototype['BioUser'] = undefined;

/**
 * @member {Array.<module:model/Nft>} UserNFTs
 */
User.prototype['UserNFTs'] = undefined;






export default User;

